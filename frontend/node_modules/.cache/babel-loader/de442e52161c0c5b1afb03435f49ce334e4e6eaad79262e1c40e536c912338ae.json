{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishw\\\\OneDrive\\\\Desktop\\\\RoxilerAssignment\\\\frontend\\\\src\\\\components\\\\BarChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { Paper } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChart = ({\n  actual = [],\n  categories = [],\n  selectedFilters\n}) => {\n  _s();\n  const [state, setState] = useState({\n    chart: {\n      type: \"column\",\n      height: 260,\n      toolbar: {\n        show: false\n      }\n    },\n    credits: {\n      enabled: false\n    },\n    title: {\n      text: \"Bar Chart Stats\",\n      align: \"left\",\n      style: {\n        color: \"black\",\n        fontSize: \"16px\",\n        fontWeight: \"500\"\n      }\n    },\n    plotOptions: {\n      series: {\n        dataLabels: {\n          enabled: false\n        }\n      },\n      bar: {\n        pointWidth: 10,\n        borderWidth: 0,\n        dataLabels: {\n          enabled: true,\n          format: \"{point.y}\"\n        }\n      }\n    }\n  });\n  useEffect(() => {\n    setState(prev => ({\n      ...prev,\n      title: {\n        text: \"Bar Chart Stats - \" + selectedFilters\n      },\n      xAxis: {\n        categories: categories,\n        labels: {\n          style: {\n            color: \"#404040\",\n            fontSize: \"10px\",\n            fontWeight: \"600\"\n          }\n        }\n      },\n      yAxis: {\n        tickAmount: 5,\n        title: \"\",\n        labels: {\n          format: \"{text}\",\n          style: {\n            color: \"#404040\",\n            fontSize: \"10px\",\n            fontWeight: \"600\"\n          }\n        }\n      },\n      series: [{\n        maxPointWidth: 20,\n        showInLegend: false,\n        name: \"Quantity\",\n        data: actual,\n        color: \"#00ffff\"\n      }]\n    }));\n  }, [actual, categories]);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      marginBottom: \"0.5rem\",\n      boxShadow: \"none\",\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(BarChart, \"JZvfX45aifB2SWYRoMMiJrObuPo=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useEffect","useState","Highcharts","HighchartsReact","Paper","jsxDEV","_jsxDEV","BarChart","actual","categories","selectedFilters","_s","state","setState","chart","type","height","toolbar","show","credits","enabled","title","text","align","style","color","fontSize","fontWeight","plotOptions","series","dataLabels","bar","pointWidth","borderWidth","format","prev","xAxis","labels","yAxis","tickAmount","maxPointWidth","showInLegend","name","data","sx","marginBottom","boxShadow","width","children","highcharts","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vishw/OneDrive/Desktop/RoxilerAssignment/frontend/src/components/BarChart.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { Paper } from \"@mui/material\";\r\n\r\nconst BarChart = ({ actual = [], categories = [], selectedFilters }) => {\r\n  const [state, setState] = useState({\r\n    chart: {\r\n      type: \"column\",\r\n      height: 260,\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n    },\r\n    credits: {\r\n      enabled: false,\r\n    },\r\n    title: {\r\n      text: \"Bar Chart Stats\",\r\n      align: \"left\",\r\n      style: {\r\n        color: \"black\",\r\n        fontSize: \"16px\",\r\n        fontWeight: \"500\",\r\n      },\r\n    },\r\n    plotOptions: {\r\n      series: {\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n      },\r\n      bar: {\r\n        pointWidth: 10,\r\n        borderWidth: 0,\r\n        dataLabels: {\r\n          enabled: true,\r\n          format: \"{point.y}\",\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    setState((prev) => ({\r\n      ...prev,\r\n      title: {\r\n        text: \"Bar Chart Stats - \" + selectedFilters,\r\n      },\r\n      xAxis: {\r\n        categories: categories,\r\n        labels: {\r\n          style: {\r\n            color: \"#404040\",\r\n            fontSize: \"10px\",\r\n            fontWeight: \"600\",\r\n          },\r\n        },\r\n      },\r\n      yAxis: {\r\n        tickAmount: 5,\r\n        title: \"\",\r\n        labels: {\r\n          format: \"{text}\",\r\n          style: {\r\n            color: \"#404040\",\r\n            fontSize: \"10px\",\r\n            fontWeight: \"600\",\r\n          },\r\n        },\r\n      },\r\n      series: [\r\n        {\r\n          maxPointWidth: 20,\r\n          showInLegend: false,\r\n          name: \"Quantity\",\r\n          data: actual,\r\n          color: \"#00ffff\",\r\n        },\r\n      ],\r\n    }));\r\n  }, [actual, categories]);\r\n\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        marginBottom: \"0.5rem\",\r\n        boxShadow: \"none\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <HighchartsReact highcharts={Highcharts} options={state} />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,eAAe,MAAM,2BAA2B;AACvD,SAASC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,MAAM,GAAG,EAAE;EAAEC,UAAU,GAAG,EAAE;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACtE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC;IACjCa,KAAK,EAAE;MACLC,IAAI,EAAE,QAAQ;MACdC,MAAM,EAAE,GAAG;MACXC,OAAO,EAAE;QACPC,IAAI,EAAE;MACR;IACF,CAAC;IACDC,OAAO,EAAE;MACPC,OAAO,EAAE;IACX,CAAC;IACDC,KAAK,EAAE;MACLC,IAAI,EAAE,iBAAiB;MACvBC,KAAK,EAAE,MAAM;MACbC,KAAK,EAAE;QACLC,KAAK,EAAE,OAAO;QACdC,QAAQ,EAAE,MAAM;QAChBC,UAAU,EAAE;MACd;IACF,CAAC;IACDC,WAAW,EAAE;MACXC,MAAM,EAAE;QACNC,UAAU,EAAE;UACVV,OAAO,EAAE;QACX;MACF,CAAC;MACDW,GAAG,EAAE;QACHC,UAAU,EAAE,EAAE;QACdC,WAAW,EAAE,CAAC;QACdH,UAAU,EAAE;UACVV,OAAO,EAAE,IAAI;UACbc,MAAM,EAAE;QACV;MACF;IACF;EACF,CAAC,CAAC;EAEFlC,SAAS,CAAC,MAAM;IACda,QAAQ,CAAEsB,IAAI,KAAM;MAClB,GAAGA,IAAI;MACPd,KAAK,EAAE;QACLC,IAAI,EAAE,oBAAoB,GAAGZ;MAC/B,CAAC;MACD0B,KAAK,EAAE;QACL3B,UAAU,EAAEA,UAAU;QACtB4B,MAAM,EAAE;UACNb,KAAK,EAAE;YACLC,KAAK,EAAE,SAAS;YAChBC,QAAQ,EAAE,MAAM;YAChBC,UAAU,EAAE;UACd;QACF;MACF,CAAC;MACDW,KAAK,EAAE;QACLC,UAAU,EAAE,CAAC;QACblB,KAAK,EAAE,EAAE;QACTgB,MAAM,EAAE;UACNH,MAAM,EAAE,QAAQ;UAChBV,KAAK,EAAE;YACLC,KAAK,EAAE,SAAS;YAChBC,QAAQ,EAAE,MAAM;YAChBC,UAAU,EAAE;UACd;QACF;MACF,CAAC;MACDE,MAAM,EAAE,CACN;QACEW,aAAa,EAAE,EAAE;QACjBC,YAAY,EAAE,KAAK;QACnBC,IAAI,EAAE,UAAU;QAChBC,IAAI,EAAEnC,MAAM;QACZiB,KAAK,EAAE;MACT,CAAC;IAEL,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACjB,MAAM,EAAEC,UAAU,CAAC,CAAC;EAExB,oBACEH,OAAA,CAACF,KAAK;IACJwC,EAAE,EAAE;MACFC,YAAY,EAAE,QAAQ;MACtBC,SAAS,EAAE,MAAM;MACjBC,KAAK,EAAE;IACT,CAAE;IAAAC,QAAA,eAEF1C,OAAA,CAACH,eAAe;MAAC8C,UAAU,EAAE/C,UAAW;MAACgD,OAAO,EAAEtC;IAAM;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEZ,CAAC;AAAC3C,EAAA,CAzFIJ,QAAQ;AAAAgD,EAAA,GAARhD,QAAQ;AA2Fd,eAAeA,QAAQ;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}